extends verilog

snippet forea "Foreach Loop"
	foreach (${1}) begin
		${0}
	end
endsnippet

snippet dowh "Do-while statement"
	do begin
		${0}
	end while (${1});
endsnippet

snippet alc "Combinational always block"
	always_comb begin ${1:: statement_label}
		${0}
	end $1
endsnippet

snippet alff "Sequential logic"
	always_ff @(posedge ${1:clk}) begin ${2:: statement_label}
		${0}
	end $2
endsnippet

snippet all "Latched logic"
	always_latch begin ${1:: statement_label}
		${0}
	end $1
endsnippet

snippet cl "Class"
	class ${1:class_name};
		// data or class properties
		${0}

		// initialization
		function new();
		endfunction : new

	endclass : $1
endsnippet

snippet types "Typedef structure"
	typedef struct {
		${0}
	} ${1:name_t};
endsnippet

snippet prog "Program block"
	program ${1:program_name} ();
		${0}
	endprogram : $1
endsnippet

snippet intf "Interface block"
	interface ${1:program_name} ();
		// nets
		${0}
		// clocking

		// modports

	endinterface : $1
endsnippet

snippet clock "Clocking Block"
	clocking ${1:clocking_name} @(${2:posedge} ${3:clk});
		${0}
	endclocking : $1
endsnippet

snippet cg "Covergroup construct"
	covergroup ${1:group_name} @(${2:posedge} ${3:clk});
		${0}
	endgroup : $1
endsnippet

snippet pkg "Package declaration"
	package ${1:package_name};
		${0}
	endpackage : $1
endsnippet

